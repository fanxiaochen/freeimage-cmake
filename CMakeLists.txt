cmake_minimum_required(VERSION 2.8.0)

# FreeImage version
SET( FREEIMAGE_VERSION_MAIN 3)
SET( FREEIMAGE_VERSION_MIDDLE 16)
SET( FREEIMAGE_VERSION_LOWER 0)
SET( FREEIMAGE_VERSION_MINOR 0)
SET( FREEIMAGE_VERSION ${FREEIMAGE_VERSION_MAIN}.${FREEIMAGE_VERSION_MIDDLE}.${FREEIMAGE_VERSION_LOWER} )
SET( FREEIMAGE_VERSION_BUILD ${FREEIMAGE_VERSION_MAIN}.${FREEIMAGE_VERSION_MIDDLE}.${FREEIMAGE_VERSION_LOWER}.${FREEIMAGE_VERSION_MINOR} )


OPTION(ENABLE_PNG "Enable PNG support" 1)
OPTION(ENABLE_JPEG "Enable JPEG support" 1)
OPTION(ENABLE_TIFF "Enable TIFF support" 1)
OPTION(ENABLE_WEBP "Enable WebP support" 0)
OPTION(ENABLE_RAW "Enable RAW support" 0)
OPTION(ENABLE_OPENJP "Enable OpenJPEG support" 0)

project (FreeImage)

# Check parameters
INCLUDE(CheckIncludeFile)
INCLUDE(CheckIncludeFileCXX)
INCLUDE(CheckFunctionExists)
INCLUDE(CheckTypeSize)

# Find packages
FIND_PACKAGE(ZLIB REQUIRED)
SET(LIBS ${ZLIB_LIBRARIES})

IF(ENABLE_PNG)
  FIND_PACKAGE(PNG REQUIRED)
  SET(LIBS ${LIBS} ${PNG_LIBRARIES})
  ADD_DEFINITIONS(-DENABLE_PNG)
ENDIF()
IF(ENABLE_JPEG)
  FIND_PACKAGE(JPEG REQUIRED)
  SET(LIBS ${LIBS} ${JPEG_LIBRARIES})
  ADD_DEFINITIONS(-DENABLE_JPEG)
ENDIF()
IF(ENABLE_TIFF)
  FIND_PACKAGE(TIFF REQUIRED)
  SET(LIBS ${LIBS} ${TIFF_LIBRARIES})
  ADD_DEFINITIONS(-DENABLE_TIFF)
ENDIF()
IF(ENABLE_WEBP)
  find_path(WEBP_INCLUDE_DIR mux_types.h)
  find_library(WEBP_LIBRARIES NAMES webp libwebp)
  SET(LIBS ${LIBS} ${WEBP_LIBRARIES})
  find_library(WEBP_MUX_LIBRARIES NAMES webpmux libwebpmux)
  SET(LIBS ${LIBS} ${WEBP_MUX_LIBRARIES})
  ADD_DEFINITIONS(-DENABLE_WEBP)
ENDIF()
IF(ENABLE_RAW)
  find_path(RAW_INCLUDE_DIR libraw.h)
  find_library(RAW_LIBRARIES NAMES raw_static libraw_static)
  SET(LIBS ${LIBS} ${RAW_LIBRARIES})
ENDIF()
IF(ENABLE_OPENJP)
  find_path(OPENJP_INCLUDE_DIR openjpeg.h)
  find_library(OPENJP_LIBRARIES NAMES openjp2 libopenjp2)
  SET(LIBS ${LIBS} ${OPENJP_LIBRARIES})
ENDIF()

IF(MSVC)
  add_definitions(-D_CRT_SECURE_NO_WARNINGS)
ENDIF()

# Set default output dirs
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# Set libraries for static or DLL build
IF(FREEIMAGE_BUILD_STATIC)
  SET(FREEIMAGE_BUILD_FLAGS -DFREEIMAGE_LIB)
ELSE(FREEIMAGE_BUILD_STATIC)
  SET(FREEIMAGE_LIBRARIES FreeImage)
  SET(FREEIMAGE_BUILD_DLL ON)
ENDIF(FREEIMAGE_BUILD_STATIC)

SET(FREEIMAGE_INCLUDE_DIRS ${CMAKE_SOURCE_DIR}/Source)
SET(FREEIMAGE_LIBRARY_DIRS ${CMAKE_BINARY_DIR}/Lib)

add_subdirectory(Source)

